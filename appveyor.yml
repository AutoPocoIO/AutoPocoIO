version: '1.0.{build}'
image: Visual Studio 2019

shallow_clone: true

environment:
   VERSION: 1.0.0
   OPENCOVER_PREFIX: 'C:\Users\appveyor\.nuget\packages\OpenCover\4.7.922\tools\OpenCover.Console.exe -register -target:"C:\Program Files\dotnet\dotnet.exe" -targetargs:"test'
   OPENCOVER_SUFFIX: ' --no-build" -output:".\coverage.xml" -returntargetcode:1000 -mergeoutput -oldStyle -filter:"+[AutoPocoIO*]* -[*.test*]*" -excludebyattribute:"*.ExcludeFromCodeCoverageAttribute" -excludebyfile:"*.cshtml.cs;*cshtml"; $env:TEST_PASS = $?; if($env:Test_PASS -eq "False") {$host.SetShouldExit(1)}'
   TEST_PASS: 'False'
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
build_script:
  # output will be in ./src/bin/debug/netcoreapp1.1/publish
  - cmd: dotnet build ./sln/AutoPocoIO.sln --verbosity m
  - cmd: dotnet pack src/AutoPocoIO/AutoPocoIO.csproj -p:PackageVersion="%VERSION%-beta.%APPVEYOR_BUILD_NUMBER%"
  - cmd: dotnet pack src/AutoPocoIO.MsSql/AutoPocoIO.MsSql.csproj -p:PackageVersion="%VERSION%-beta.%APPVEYOR_BUILD_NUMBER%"
test_script:
 # run the unit tests
  - ps: iex "$env:OPENCOVER_PREFIX tests\AutoPocoIO.test\AutoPocoIO.test.csproj --framework net461 $env:OPENCOVER_SUFFIX"
  - ps: iex "$env:OPENCOVER_PREFIX tests\AutoPocoIO.AspNet.test\AutoPocoIO.AspNet.test.csproj --framework net461 $env:OPENCOVER_SUFFIX"
  - ps: iex "$env:OPENCOVER_PREFIX tests\AutoPocoIO.MsSql.test\AutoPocoIO.MsSql.test.csproj --framework net461 $env:OPENCOVER_SUFFIX"
  - ps: iex "$env:OPENCOVER_PREFIX tests\AutoPocoIO.test\AutoPocoIO.test.csproj --framework netcoreapp2.2 $env:OPENCOVER_SUFFIX"
  - ps: iex "$env:OPENCOVER_PREFIX tests\AutoPocoIO.AspNetCore.test\AutoPocoIO.AspNetCore.test.csproj --framework netcoreapp2.2 $env:OPENCOVER_SUFFIX"
  - ps: iex "$env:OPENCOVER_PREFIX tests\AutoPocoIO.MsSql.test\AutoPocoIO.MsSql.test.csproj --framework netcoreapp2.2 $env:OPENCOVER_SUFFIX"
for:
-
  branches:
     except:
     - master
  after_test:
     - ps: |
         $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH;
         Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh;
         bash codecov.sh -f "coverage.xml" -Z | Out-Null
         exit 0;
artifacts:
  - path: '**\*.nupkg' # find all NuGet packages recursively
  - path: '**\coverage.xml'
deploy:
  - provider : NuGet
    server: https://nuget.pkg.github.com/AutoPocoIO/index.json
    artifact: /.nupkg/
    username:
       secure: RjsXxaVLs5C3lpq67rHM9g==
    api_key:
       secure: LvjtSQVaspqe2HzrcP5NG7b4ObvMscVivtHlHB9TBQm8NTR2sWUY4V2cy2waIv5X
    on:
       branch: master    

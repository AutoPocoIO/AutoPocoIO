version: '1.0.{build}'
image: Visual Studio 2019

shallow_clone: true

environment:
   matrix:
     - VERSION: 2.2.0
       PROJECT_SUFFIX: _2X
       TEST_FOLDER: 2X
       CORE_VERSION: netcoreapp2.2
     - VERSION: 3.1.0
       PROJECT_SUFFIX: _3X
       TEST_FOLDER: 3X
       CORE_VERSION: netcoreapp3.1
   OPENCOVER_PREFIX: 'C:\Users\appveyor\.nuget\packages\OpenCover\4.7.922\tools\OpenCover.Console.exe -register -target:"C:\Program Files\dotnet\dotnet.exe" -targetargs:"test'
   OPENCOVER_SUFFIX: ' --no-build -c %CONFIG%" -output:".\coverage.xml" -returntargetcode:1000 -mergeoutput -oldStyle -filter:"+[AutoPocoIO*]* -[*.test*]*" -excludebyattribute:"*.ExcludeFromCodeCoverageAttribute" -excludebyfile:"*.cshtml.cs;*cshtml;*.Designer.cs"; $env:TEST_PASS = $?; if($env:Test_PASS -eq "False") {$host.SetShouldExit(1)}'
   TEST_PASS: 'False'
   CONFIG: 'Debug'
   GIT_HUB_USER:
     secure: RjsXxaVLs5C3lpq67rHM9g==
   GIT_HUB_PASS:
     secure: LvjtSQVaspqe2HzrcP5NG7b4ObvMscVivtHlHB9TBQm8NTR2sWUY4V2cy2waIv5X
for:
- 
  branches:
     only:
       - master
  environment: 
     CONFIG: 'Release'
-
  branches:
     except:
     - master
  after_test:
     - ps: |
         $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH;
         Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh;
         bash codecov.sh -f "coverage.xml" -Z | Out-Null
         $host.SetShouldExit(0);
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
cache:
  - samples/AngularSample/ClientApp/node_modules -> samples/AngularSample/ClientApp/package.json
  - sln/packages -> samples/AspNetSample/packages.config
build_script:
  # output will be in ./src/bin/debug/netcoreapp1.1/publish
  - cmd:  nuget sources add -Name github -Source https://nuget.pkg.github.com/AutoPocoIO/index.json -UserName %GIT_HUB_USER% -Password %GIT_HUB_PASS% 
  # Builder EF 22
  - cmd: nuget restore ./sln/AutoPocoIO%PROJECT_SUFFIX%.sln -verbosity quiet 
  - cmd: dotnet build ./sln/AutoPocoIO%PROJECT_SUFFIX%.sln /p:IsAppVeyor=true --verbosity m -c %CONFIG%
  - cmd: dotnet pack src/AutoPocoIO%PROJECT_SUFFIX%/AutoPocoIO%PROJECT_SUFFIX%.csproj -p:PackageVersion="%VERSION%-beta.%APPVEYOR_BUILD_NUMBER%" -c %CONFIG%
test_script:
 # run the unit tests
  - ps: iex "$env:OPENCOVER_PREFIX tests\$env:TEST_FOLDER\AutoPocoIO$env:PROJECT_SUFFIX.test\AutoPocoIO$env:PROJECT_SUFFIX.test.csproj --framework net461 $env:OPENCOVER_SUFFIX" 
  - ps: iex "$env:OPENCOVER_PREFIX tests\$env:TEST_FOLDER\AutoPocoIO$env:PROJECT_SUFFIX.AspNet.test\AutoPocoIO$env:PROJECT_SUFFIX.AspNet.test.csproj --framework net461 $env:OPENCOVER_SUFFIX"
  - ps: iex "$env:OPENCOVER_PREFIX tests\$env:TEST_FOLDER\AutoPocoIO$env:PROJECT_SUFFIX.test\AutoPocoIO$env:PROJECT_SUFFIX.test.csproj --framework $env:CORE_VERSION $env:OPENCOVER_SUFFIX"
  - ps: iex "$env:OPENCOVER_PREFIX tests\$env:TEST_FOLDER\AutoPocoIO$env:PROJECT_SUFFIX.AspNetCore.test\AutoPocoIO$env:PROJECT_SUFFIX.AspNetCore.test.csproj --framework $env:CORE_VERSION $env:OPENCOVER_SUFFIX"
  
artifacts:
  - path: '**\bin\**\*.nupkg' # find all NuGet packages recursively
  - path: '**\coverage.xml'
deploy:
  - provider : NuGet
    server: https://nuget.pkg.github.com/AutoPocoIO/index.json
    artifact: /.nupkg/
    username:
       secure: RjsXxaVLs5C3lpq67rHM9g==
    api_key:
       secure: LvjtSQVaspqe2HzrcP5NG7b4ObvMscVivtHlHB9TBQm8NTR2sWUY4V2cy2waIv5X
    on:
       branch: master    

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoPocoIO.Dashboard.Pages
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using AutoPocoIO.Middleware;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    internal partial class DashboardPage : RazorPage
    {
#line hidden

        public override void Execute()
        {


WriteLiteral("\r\n\r\n");



WriteLiteral("\r\n<div class=\"container pt-4 mt-5\">\r\n    <h1>\r\n        <div class=\"btn-group btn-" +
"group-toggle mt-2\" style=\"float: right !important\" data-toggle=\"buttons\">\r\n     " +
"       <label class=\"btn btn-light ");


                                   Write(ViewBag["IsDaily"]);

WriteLiteral("\" onclick=\"window.location=\'");


                                                                                  Write(TransformUrl("/"));

WriteLiteral("\'\">\r\n                <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete" +
"=\"off\"> Day\r\n            </label>\r\n            <label class=\"btn btn-light ");


                                   Write(ViewBag["IsWeekly"]);

WriteLiteral("\" onclick=\"window.location=\'");


                                                                                   Write(TransformUrl("/Weekly"));

WriteLiteral(@"'"">
                <input type=""radio"" name=""options"" id=""option2"" autocomplete=""off""> Week
            </label>
        </div>
        Overview
    </h1>
    <hr />
    <h2>Request statistics</h2>
    <div class=""container mt-4"">
        <div class=""row"">
            <div class=""col-sm-3"">
                <div class=""card"">
                    <div class=""card-body"">
                        <h3 class=""text-center"">Total</h3>
                        <h1 class=""text-center"" style=""font-weight:100 !important;"">");


                                                                               Write(ViewBag["TotalCount"]);

WriteLiteral("</h1>\r\n                        <hr />\r\n                        <p class=\"text-cen" +
"ter\">Average reponse time: ");


                                                                Write(ViewBag["TotalTime"]);

WriteLiteral(@"ms</p>
                    </div>
                </div>
            </div>
            <div class=""col-sm-3"">
                <div class=""card"">
                    <div class=""card-body"">
                        <h3 class=""text-center"">Successful</h3>
                        <h1 class=""text-center text-success"" style=""font-weight:100 !important;"">");


                                                                                            Write(ViewBag["SuccessfulCount"]);

WriteLiteral("</h1>\r\n                        <hr />\r\n                        <p class=\"text-cen" +
"ter\">Average reponse time: ");


                                                                Write(ViewBag["SuccessfulTime"]);

WriteLiteral(@"ms</p>
                    </div>
                </div>
            </div>
            <div class=""col-sm-3"">
                <div class=""card"">
                    <div class=""card-body"">
                        <h3 class=""text-center"">Failed</h3>
                        <h1 class=""text-center text-danger"" style=""font-weight:100 !important;"">");


                                                                                           Write(ViewBag["FailCount"]);

WriteLiteral("</h1>\r\n                        <hr />\r\n                        <p class=\"text-cen" +
"ter\">Average reponse time: ");


                                                                Write(ViewBag["FailCountTime"]);

WriteLiteral(@"ms</p>
                    </div>
                </div>
            </div>
            <div class=""col-sm-3"">
                <div class=""card"">
                    <div class=""card-body"">
                        <h3 class=""text-center"">Unauthorized</h3>
                        <h1 class=""text-center text-danger"" style=""font-weight:100 !important;"">");


                                                                                           Write(ViewBag["UnauthorizedCount"]);

WriteLiteral("</h1>\r\n                        <hr />\r\n                        <p class=\"text-cen" +
"ter\">Average reponse time: ");


                                                                Write(ViewBag["UnauthorizedTime"]);

WriteLiteral(@"ms</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""container mt-5"">

    <h2>Request graph</h2>
    <div class=""container mt-4"">
        <div class=""row"">
            <div class=""chart-container"" style=""height:400px; width: 1400px"">
                <canvas id=""myChart""></canvas>
            </div>
        </div>
    </div>
</div>

");


DefineSection("css", () => {

WriteLiteral("\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.j" +
"s/2.9.3/Chart.min.css\" crossorigin=\"anonymous\" />\r\n");


});

WriteLiteral("\r\n\r\n");


DefineSection("script", () => {

WriteLiteral(@"
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.bundle.min.js"" crossorigin=""anonymous""></script>
    <script>
          var ctx = document.getElementById('myChart');
          var myChart = new Chart(ctx, {
              type: 'line',
              data: {
                  labels: ");


                     Write(TransformArray(ViewBag["GraphLabels"]));

WriteLiteral(",\r\n                  datasets: [\r\n                      {\r\n                      " +
"    data: ");


                           Write(TransformArray(ViewBag["FailGraph"]));

WriteLiteral(@",
                          borderWidth: 1,
                          lineTension: 0.1,
                          borderColor: 'rgb(220,53,69)',
                          backgroundColor: 'rgba(220,53,69,0.9)',
                          pointRadius: 0
                      },
                      {
                          data: ");


                           Write(TransformArray(ViewBag["SuccessfulGraph"]));

WriteLiteral(@",
                          borderWidth: 1,
                          lineTension: 0.1,
                          borderColor: 'rgb(40,167,69)',
                          backgroundColor: 'rgba(40,167,69,0.7)',
                          pointRadius: 0
                      }]
              },
              options: {
                  scales: {
                      yAxes: [{
                          stacked: true
                      }]
                  },
                  maintainAspectRatio: false,
                  legend: {
                      display: false
                  },
                  tooltips: {
                      callbacks: {
                          label: function (tooltipItem) {
                              return tooltipItem.yLabel;
                          }
                      }
                  }
              }
          });
    </script>
");


});


        }
    }
}
#pragma warning restore 1591
